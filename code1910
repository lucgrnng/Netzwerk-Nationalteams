---
---
title: "226305 Forschungsbericht"
subtitle: "Analyse der vergangenen drei Fußballweltmeister"
date: "Sommersemester 2020"
author: "Fiona Noever, Luca Gröning, Loris Hoffmann, Patrick Steinle | fn009@hdm-stuttgart.de, lg058@hdm-stuttgart.de, lh112@hdm-stuttgart.de, psXXX@hdm-stuttgart.de "
output: html_notebook
---

**Aufbau**
*1. Einleitung, Forschungsfrage und Motivation*
*2. Forschungsstand der empirischen und theoretischen Literatur*
*3. Datenerhebung: Zugang, Bereinigung und Codebuch*
*4. Analyse und Interpretation*
*5. Visualisierung des Netzwerks*
*6. Diskussion: Fazit, Limitationen und Ausblick*
*7. Literatur und Anhang*

*Genaueres zu den Unterpunkten in der Anleitung von Sandhu im Bericht*

Wir untersuchen die Gewinner der letzten drei Fußballweltmeisterschaften (Spanien 2010, Deutschland 2014, Frankreich 2018), um herauszufinden, ob die Mannschaften aus mehreren Blöcken bestanden, die zum Zeitpunkt der Weltmeisterschaft gemeinsam in einem Verein spielten. 
Dabei interessiert uns besonders, welche Spieler in ihrer Karriere mit anderen Spielern aus der Nationalmannschaft zusammengespielt haben und wie viele Saisons sie miteinander gespielt haben. Insbesondere die Block- und Clusterbildung innerhalb der Nationalmannschaften sind dabei von großer Bedeutung. 
Außerdem wollen wir untersuchen, ob es zentrale Akteure innerhalb des Netzwerks gibt, die auffälig viele Verbindungen aufweisen. Für das Netzwerk wurden die Karrieren der Spieler aus den jeweiligen Kadern der drei beschriebenen Weltmeistern untersucht. 
Der Vergleich mit den darauffolgenden oder vorherigen Weltmeisterschaften eines jeweiligen Landes und der Untersuchung nach der jeweiligen Clusterbildung ist außerdem Bestandteil dieser Forschung. 
Daraus wollen wir ein Fazit ziehen, ob der Erfolg einer Fußballnationallmanschaften mit der Anzahl der CLuster in Zusammenhang steht. 

# Vorarbeiten und vergleichbare Studien
## Forschungsstand
Das Forschungsdesign lehnt sich nicht an eine vergleichbare Studien an.

--> *Studien nachhaken bzw. Sandhu fragen

## Hypothesen
Wir gehen von folgenden Hypothesen aus:
a) Clusterbildung: Die Nationalmannschaften waren erfolgreich, da sie eine hohe Clusterbildung aufweisen. 
b) Clusterbildung: Die gleichen Nationalmannschaften waren weniger erfolgreich, da sie weniger Cluster aufwiesen.
c) Mannschaftsblöcke: Die Mannschaftsblöcke kommen nicht bei jedem der Weltmeister aus der jeweiligen nationalen Liga.
d) *(Alter oder value)

# Datenerhebung: Zugang, Bereinigung und Codebuch

## Zugang
Der Zugang zu den Datensätzen erfolgte ausschließlich über die Onlineplattformen: www.transfermarkt.de, www.weltfussball.de sowie www.kicker.de. 

## Bereinigung des Datensatzes
Die Datensätze wurden anschließend in Excel-Listen übertragen. Dabei wurden zuerst Karrierelisten für die jeweiligen Spieler erstellt und anschließend in eine Edgelist und Nodelist übertragen und überprüft. Bei dieser Überprüfung ließen sich erste Verbindungen ohne eine Visualisierung erkennen. Der Datensatz ist unter [Github](https://github.com/lucgrnng/Netzwerk-Nationalteams/blob/master/Karrierelisten.csv) verfügbar. 


## Codebuch
Das [Codebuch](https://github.com/lucgrnng/Netzwerk-Nationalteams/blob/master/Codebuch.md) beschreibt die Trikotnummern, Vereine, das Alter sowie die Bedeutung der Spieler. Außerdem wurde defnitert, ob die jeweiligen Spieler zum Zeitpunkt der Fußballweltmeisterschaft zusammengespielt haben und/oder wie viele Saisons die Spieler zuvor in einem Verein zusammengespielt haben. Die Datensätze sind ebenfalls auf Github hinterlegt.

# Analyse und Interpretation

# Die Gesamtnetzwerk

Das Gesamtnetzwerk des Siegers der Fußballweltmeisterschaft 2010 "Spanien 2010" umfasst 23 Knoten und 46 Beziehungen (siehe igraph-Objekt). Es ist ungerichtet und gewichtet. *Visualisierung um Beziehungen hervorzuheben* *In Erfahrung bringen* *Patti versucht über Visualisierung (delete_weight...) Problem zu lösen* 
Das Gesamtnetzwerk des Siegers der Fußballweltmeisterschaft 2014 "Deutschland 2014" umfasst 23 Knoten und 50 Beziehungen (siehe igraph-Objekt). Es ist ungerichtet und gewichtet.
Das Gesamtnetzwerk des Siegers der Fußballweltmeisterschaft 2018 "Frankreich 2018" umfasst 23 Knoten und 28 Beziehungen (siehe igraph-Objekt). Es ist ungerichtet und gewichtet.

```{r Gesamnetzwerke erstellen, echo=FALSE, message=FALSE, warning=FALSE, paged.print=TRUE}

library(igraph)

# Einlesen der Edge- und Nodelist von Spanien 2010 
elS <- read.csv("https://raw.githubusercontent.com/lucgrnng/Netzwerk-Nationalteams/master/NEU%20Spanien%202010%20Edgelist.csv", header=T, as.is=T, sep = ",")
nodesS <- read.csv("https://raw.githubusercontent.com/lucgrnng/Netzwerk-Nationalteams/master/Neu%20Spanien%202010%20Nodelist.csv", header=T, as.is=T, sep = ",")

# Einlesen der Edge- und Nodelist von Deutschland 2014
elD <- read.csv("https://raw.githubusercontent.com/lucgrnng/Netzwerk-Nationalteams/master/Edgelist%20Deutschland%202014%20neu.csv", header=T, as.is=T, sep = ",")
nodesD <- read.csv("https://raw.githubusercontent.com/lucgrnng/Netzwerk-Nationalteams/master/Nodelist%20Deutschland%202014.csv", header=T, as.is=T, sep = ",")

# Einlesen der Edge- und Nodelist von Frankreich 2018
elF <- read.csv("https://raw.githubusercontent.com/lucgrnng/Netzwerk-Nationalteams/master/Edgelist%20Frankreich%202018%20neu.csv", header=T, as.is=T, sep = ",")
nodesF <- read.csv("https://raw.githubusercontent.com/lucgrnng/Netzwerk-Nationalteams/master/Nodelist%20Frankreich%202018.csv", header=T, as.is=T, sep = ",")

# Matrix erstellen
edgematrixS <-as.matrix(elS)
edgematrixD <-as.matrix(elD)
edgematrixF <-as.matrix(elF)

# Zusammenführen von Edge- und Nodelist als igraph-Objekt Spanien10
Spanien10 <- graph_from_data_frame(d=edgematrixS, vertices=nodesS, directed=F)
Spanien10

# Zusammenführen von Edge- und Nodelist als igraph-Objekt Deutschland14
Deutschland14 <- graph_from_data_frame(d=edgematrixD, vertices=nodesD, directed=F)
Deutschland14

# Zusammenführen von Edge- und Nodelist als igraph-Objekt Frankreich18
Frankreich18 <- graph_from_data_frame(d=edgematrixF, vertices=nodesF, directed=F)
Frankreich18

```

Für die jeweiligen Fußballweltmeister der Jahre 2010, 2014 und 2018 wurden die Edge-, und Nodelist zuerst in GitHub hochgeladen und anschließend in R  eingelesen.
Dabei lässt sich festellen, dass alle Fußballweltmeister 23 Knoten aufweisen, da jede Nationalität bei einer Fußballweltmeisterschaft einen Kader von 23 Spielern melden darf. 
Die jeweiligen Länder haben unterschiedlich viele Beziehungen zueinander, die sich in der Übersicht ablesen lassen. Das Ergebnis zeigt: Mit 51 Beziehungen hat Spanien die meisten Beziehungen, gefolgt von Deutschland mit 49 Beziehungen. 
Frankreich hat mit 28 Beziehungen mit Abstand die wenigsten Beziehungen untereinander.  

--> *DNW -- Bedeutung rausfinden und dann Text erstellen
--> *Was bedeuten die Zahlen in der Klammer am Anfang 

```{r Gesamnetzwerk von Deutschland erstellen, echo=FALSE, message=FALSE, warning=FALSE, paged.print=TRUE}

library(igraph)

## Sind die Netzwerke bereits vereinfacht?
# Zusammenführen von Edge- und Nodelist als igraph-Objekt Frankreich18
is.simple(Spanien10)
is.simple(Deutschland14)
is.simple(Frankreich18)

## Bestehen die Netzwerke aus Komponenten?
## wenn ja, wie vielen?
is.connected(Spanien10)
components(Spanien10)

is.connected(Deutschland14)
components(Deutschland14)

is.connected(Frankreich18)
components(Frankreich18)

## Welchen Umfang haben die Netzwerke? 
diameter(Spanien10)
diameter(Deutschland14)
diameter(Frankreich18)

```

Durch das Ausführen des Chunks ergeben sich folgende Fragen: 

Sind die Netzwerke bereits vereinfacht? 
- Ja, die Netzwerke sind bei den drei Fußballweltmeistern Spanien 2010, Deutschland 2014 und Frankreich 2018 vereinfacht. 

Bestehen die Netzwerke aus Komponenten? 
- Die Netzwerke der drei Fußballweltmeister Spanien 2010, Deutschland 2014 und Frankreich 2018 bestehen aus jeweils einem Gesamtnetzwerk und nicht aus mehreren Komponenten. 
*--> Nochmal nachlesen (bei Sandhu auf Folien nachschlagen)

Welchen Umfang haben die Netzwerke? 
- Das Netzwerk Spanien 2010 hat einen Umfang von 10, das Netzwerk Deutschland 2014 hat einen Umfang von 9 und das Netzwerk von Frankreich 2018 hat einen Umfahg von 7. 
  Die Netzwerke Spanien 2010 und Deutschland 2014 haben einen größeren Umfang, da sie mehr Verbindungen als das Netzwerk Frankreich 2018 aufweisen. 
*--> Stimmen die Zahlen? 

#Visualisierung der Netzwerke
##Visualisierung des Netzwerk Spanien 2010
```{r Einfache Visualisierung des erstellten Objekt der spanischen Nationalmannschaft 2010 , fig.height=10, fig.width=16, message=TRUE, warning=TRUE, paged.print=TRUE}

# Pro-Tipp: die Ausgabe jedes "chunks" lässt sich über das Rädchen direkt über dem Textfeld einstellen. Hier habe ich die Bildfläche auf 10 auf 16 Inches eingestellt, d.h. das Netzwerk wird automatisch auf eine Fläche von 10 auf 16 Inches geplottet. Für den Anfang empfehle ich immer bei Netzwerken bis 50 Knoten mit dem Kamada-Kawai Algorithmus zu arbeiten, weil hier die Knoten immer an die gleiche Position gesetzt werden und wir dadurch Abweichungen besser erkennen können.

plot(Spanien10,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Spanien10)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Spanien10),
     main ="Übersicht der spanischen Nationalmannschaft 2010")
```

*Vereinfachtes Gesamtnetzwerk Spanien2010*

Der erste Überblick zeigt, dass das Netzwerk der spanischen Nationalmannschaft 2010 von einzelnen, stark gewichteten Kanten geprägt ist. 
Teilweise sind einige Akteure nur sehr schwach oder überhaupt nicht eingebunden. 
Deshalb ist es sinnvoll, ein vereinfachtes Gesamtnetzwerk der spanischen Nationalmannschaft 2010 zu erstellen. 
Vereinfacht bedeutet, dass die unterschiedlichen Beziehungsarten ignoriert werden und dafür die Gewichte des Value- und Relation-Netzwerks zusammengefasst werden
(um das Ergebnis nicht zu verfälschen, wird das Beziehungsnetzwerk vorher gelöscht). 

```{r Einfache Visualisierung des erstellten Objekt der deutschen Nationalmannschaft 2014, fig.height=10, fig.width=16, message=TRUE, warning=TRUE, paged.print=TRUE}

# Pro-Tipp: die Ausgabe jedes "chunks" lässt sich über das Rädchen direkt über dem Textfeld einstellen. Hier habe ich die Bildfläche auf 10 auf 16 Inches eingestellt, d.h. das Netzwerk wird automatisch auf eine Fläche von 10 auf 16 Inches geplottet. Für den Anfang empfehle ich immer bei Netzwerken bis 50 Knoten mit dem Kamada-Kawai Algorithmus zu arbeiten, weil hier die Knoten immer an die gleiche Position gesetzt werden und wir dadurch Abweichungen besser erkennen können.

plot(Deutschland14,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Deutschland14)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Deutschland14),
     main ="Übersicht der deutschen Nationalmannschaft 2014")
```

*Vereinfachtes Gesamtnetzwerk Deutschland2014*
Der erste Überblick zeigt, dass das Netzwerk der deutschen Nationalmannschaft 2014 nicht ganz so stark von einzelnen, stark gewichteten Kanten geprägt ist, wie bei der spanischen Nationalmannschaft. 
Allerdings sind auch hier mehrere Akteure nur sehr schwach oder überhaupt nicht eingebunden.
Deshalb ist es auch hier sinnvoll, ein vereinfachtes Gesamtnetzwerk der deutschen Nationalmannschaft 2014 zu erstellen. 
Vereinfacht bedeutet, dass die unterschiedlichen Beziehungsarten ignoriert werden und dafür die Gewichte des Value- und Relation-Netzwerks zusammengefasst werden (um das Ergebnis nicht zu verfälschen, wird das Beziehungsnetzwerk vorher gelöscht).

```{r Einfache Visualisierung des erstellten Objekt der französischen Nationalmannschaft 2018, fig.height=10, fig.width=16, message=TRUE, warning=TRUE, paged.print=TRUE}

plot(Frankreich18,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Frankreich18)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Frankreich18),
     main ="Übersicht der französischen Nationalmannschaft 2018")
```

*Vereinfachtes Gesamtnetzwerk Frankreich2018*
Der erste Überblick zeigt, dass das Netzwerk der franzöischen Nationalmannschaft 2018 nicht von einzelnen, stark gewichteten Kanten geprägt ist, anders als es bei den vorherigen Nationalmannschaften der Fußballweltmeister der Fall war. 

Wiederum macht es auch hier Sinn, ein vereinfachtes Gesamtnetzwerk der französischen Nationalmannschaft 2018 zu erstellen. 
Vereinfacht bedeutet, dass die unterschiedlichen Beziehungsarten ignoriert werden und dafür die Gewichte des Value- und Relation-Netzwerks zusammengefasst werden (um das Ergebnis nicht zu verfälschen, wird das Beziehungsnetzwerk vorher gelöscht).
-->* evtl. längerer Text. 

#Genauerer Blick auf die Netzwerkattribute

Einleitender Text 

Bisher wurden in den vorherigen Abschnitten die Edge-, und Nodelisten aus Github in R eingelesen, woraus erste Erkenntnisse ersichtlich wurden. 
Anschließend wurden die drei Gesamtnetzwerke der Fußballweltmeister Spanien 2010, Deutschland 2014 und Frankreich 2018 visualisiert. 
Die Ergebnisse der Visualisierung, wurden im Anschluss miteinander vergleichen und festgehalten. Dabei wurde sichtbar, dass der Fußballweltmeister Frankreich 2018, im Vergleich zu den Fußballweltmeistern Spanien 2010 und Deutschland 2014, deutlich schwächere und weniger Beziehungen zueinander aufweist. 

Im weiteren Verlauf dieses Forschungsberichts werden wir unter anderem die Edge-, als auch die Node-Attribute genauer untersuchen und analysieren. 


```{r 2 Übersicht Netzwerkattribute}
#Wir können uns anschauen, welche Vertex- bzw. Edge-Attribute die einzelnen Netzwerke besitzen.
list.vertex.attributes(Spanien10)
list.vertex.attributes(Deutschland14)
list.vertex.attributes(Frankreich18)

list.edge.attributes(Spanien10)
list.edge.attributes(Deutschland14)
list.edge.attributes(Frankreich18)

```

Durch das Ausführen des Chunks wird sichtbar, dass überall die gleichen Attribute herangezogen wurden, um aussagekräftige Ergebnisse festhalten zu können. 

#Auslesen der einzelnen Attribute: Spanien10

```{r 2 Auslesen von Attributen }
vertex.attributes(Spanien10)$age
vertex.attributes(Spanien10)$value
vertex.attributes(Spanien10)$number
vertex.attributes(Spanien10)$club

edge.attributes(Spanien10)$weight
edge.attributes(Spanien10)$relation

```

Durch das Auslesen der einzelnen Attribute der Fußballnationalmannschaft von Spanien 2010, lassen sich folgende Ergebnisse festhalten:
Das Attribut age beschreibt in der ersten Zeile das Alter der Spieler. Der jüngste Spieler war zum Zeitpunkt der Weltmeisterschaft 2010, 20 Jahre alt und der älteste Spieler war 31 Jahre alt. 
Durch das Attribut value werden die Spieleinsätze der spanischen Nationalspieler während der Weltmeisterschaft 2010 beschrieben. 
Dadurch, dass Spanien im Jahr 2010 Fußballweltmeister geworden ist, haben sie insgesamt 7 Spiele absolviert. 
Bei dieser Beschreibung wurden nicht die Einsatzminuten als Berechnungsgrundlage verwendet, sondern ob der jeweilige Spieler in einem Spiel eingesetzt wurde. 
Somit beträgt der höchste value Wert 7 und der niedrigste 0. Das bedeutet, dass einige Spieler bei allen Spielen eingesetzt wurden und einige Spieler in keinem Spiel berücksichtigt wurden. 
Das Attribut number zeigt die Rückennummer der jeweiligen Spieler. Diese varrieren von 1 bis 23. 
Mit dem Attribut club wird das jeweilige Kürzel des Fußballvereins angezeigt, bei dem der jeweilige Spieler zum Zeitpunkt der Fußballweltmeisterschaft 2010 unter Vertrag stand. 
Dabei lässt sich erkennen, dass bei dem Fußballverein Real Madrid (RMA) 4 Spieler unter Vertrag standen und bei dem Fußballverein FC Barcelona (BAR) 7 Spieler unter Vertrag standen und damit diese beide Vereine die meisten Spieler stellten. 
Das Attribut weight veranschaulicht die Anzahl an Saisons, die die Spieler mit anderen Spielern aus der Nationalmannschaft zusammen in einem Verein gespielt haben. Dabei werden alle Verbindungen von einem Spieler zu anderen Spielern zusammengezählt. 
Es lässt sich erkennen, dass einige Spieler bis zu 10 Saisons mit anderen Spielern aus der Nationalmannschaft in einem Verein zusammengespielt haben. 
Wenn ein Spieler keine Saison mit einem anderen Spieler zusammengespielt hat und somit keine Verbindungen aufweist (=weight "0") wurde dieses Ergebnis nicht berücksichtigt. 
*--> Stimmt das so? 

Relation ist das Attribut welches beschreibt, ob die Spieler zum Zeitpunkt der Fußballweltmeisterschaft 2010 mit einem anderen Spieler im selben Verein gespielt haben und somit eine Verbindung aufweisen. 

... 
*--> alles auch im Codebuch einlesen (was ist damit gemeint)? 
Für Programmieren: Code für durchschnittsalter raussuchen. 
#Auslesen der einzelnen Attribute: Deutschland14
```{r 2 Auslesen von Attributen }
vertex.attributes(Deutschland14)$age
vertex.attributes(Deutschland14)$value
vertex.attributes(Deutschland14)$number
vertex.attributes(Deutschland14)$club

edge.attributes(Deutschland14)$weight
edge.attributes(Deutschland14)$relation
```

Text dazu
(Jede Zeile einzeln durchgehen und schon genauer beantworten)
1. Zeile alter
2. Zeile value 
... 
weight (Leute haben 1 Saison zsm gespielt bis leute haben 10 Saison miteinander gespielt. )
relation 

--> alles auch im Codebuch einlesen. 
Für Programmieren: Code für durchschnittsalter raussuchen. 

#Auslesen der einzelnen Attribute: Frankreich18
```{r 2 Auslesen von Attributen }
vertex.attributes(Frankreich18)$age
vertex.attributes(Frankreich18)$value
vertex.attributes(Frankreich18)$number
vertex.attributes(Frankreich18)$club

edge.attributes(Frankreich18)$weight
edge.attributes(Frankreich18)$relation
```

Text dazu
(Jede Zeile einzeln durchgehen und schon genauer beantworten)
1. Zeile alter
2. Zeile value 
... 
weight (Leute haben 1 Saison zsm gespielt bis leute haben 10 Saison miteinander gespielt. )
relation 

--> alles auch im Codebuch einlesen.  
Für Programmieren: Code für durchschnittsalter raussuchen. 


##Aufzählung der Attribute 

Einleitende Worte
Chunk mit relation & value machen; um aufzuzeigen dass es stärkere verbindungen gibt und weniger starke
aber für alle drei Ländern

#Netzwerk Spanien 2010 ohne Edge-Attribut relation und Edge-Attribut weight

```{r Vereinfachtes Gesamtnetzwerk Spanien10, fig.height=8, fig.width=16, message=FALSE, warning=FALSE}

# simplify Gesamtnetzwerk 
# Um die Ergebnisse der Gewichte nicht zu verfälschen, wird das Edge-Attribute relation gelöscht.
Spanien10V <- delete_edge_attr(Spanien10, "relation")
list.edge.attributes(Spanien10V)


# einfache Visualisierung des aggregierten Netzwerks
plot(Spanien10V,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Spanien10V)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Spanien10V),
     main ="Übersicht der spanischen Nationalmannschaft 2010 ohne Edge-Attribut relation")

# man kann mit denselben aber auch ein Netzwerk erstellen, welches sich nur auf das Edge-Attribut relation kozentriert.
Spanien10R <- delete_edge_attr(Spanien10, "weight")
list.edge.attributes(Spanien10R)

# einfache Visualisierung des aggregierten Netzwerks
plot(Spanien10R,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Spanien10R)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Spanien10R),
     main ="Übersicht der spanischen Nationalmannschaft 2010 ohne Edge-Attribut weight")

```

Beobachtungen schreiben

#Netzwerk Deutschland 2014 ohne Edge-Attribut relation und Edge-Attribut weight

```{r Vereinfachtes Gesamtnetzwerk Deutschland14, fig.height=8, fig.width=16, message=FALSE, warning=FALSE}
# simplify Gesamtnetzwerk 
# Um die Ergebnisse der Gewichte nicht zu verfälschen, wird das Edge-Attribute relation gelöscht.
Deutschland14V <- delete_edge_attr(Deutschland14, "relation")
list.edge.attributes(Deutschland14V)


# einfache Visualisierung des aggregierten Netzwerks
plot(Deutschland14V,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Deutschland14V)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Deutschland14V),
     main ="Übersicht der deutschen Nationalmannschaft 2014 ohne Edge-Attribut relation")

# man kann mit denselben aber auch ein Netzwerk erstellen, welches sich nur auf das Edge-Attribut relation kozentriert.
Deutschland14R <- delete_edge_attr(Deutschland14, "weight")
list.edge.attributes(Deutschland14R)

# einfache Visualisierung des aggregierten Netzwerks
plot(Deutschland14R,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Deutschland14R)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Deutschland14R),
     main ="Übersicht der deutschen Nationalmannschaft 2014 ohne Edge-Attribut weight")

```
Beobachtungen schreiben

#Netzwerk Frankreich 2018 ohne Edge-Attribut relation und Edge-Attribut weight

```{r Vereinfachtes Gesamtnetzwerk Frankreich18, fig.height=8, fig.width=16, message=FALSE, warning=FALSE}
# simplify Gesamtnetzwerk 
# Um die Ergebnisse der Gewichte nicht zu verfälschen, wird das Edge-Attribute relation gelöscht.
Frankreich18V <- delete_edge_attr(Frankreich18, "relation")
list.edge.attributes(Frankreich18V)


# einfache Visualisierung des aggregierten Netzwerks
plot(Frankreich18V,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Frankreich18V)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Frankreich18V),
     main ="Übersicht der französichen Nationalmannschaft 2018 ohne das Edge-Attribut relation")

# man kann mit denselben aber auch ein Netzwerk erstellen, welches sich nur auf das Edge-Attribut relation kozentriert.
Frankreich18R <- delete_edge_attr(Frankreich18, "weight")
list.edge.attributes(Frankreich18R)

# einfache Visualisierung des aggregierten Netzwerks
plot(Frankreich18R,
     layout=layout_in_circle,
     edge.arrow.size=.1,
     edge.color="grey",
     edge.curved=.2,
     asp=.5,
     edge.width=E(Frankreich18R)$weight,
     vertex.size=3,
     vertex.frame.color=NA,
     vertex.label.family="Helvetica",
     vertex.label.color="red3",
     vertex.label.dist=1,
     vertex.size=degree(Frankreich18V),
     main ="Übersicht der französichen Nationalmannschaft 2018 ohne das Edge-Attribut weight")

```

TEXT DAZU SCHREIBEN (Bebachtungen etc.)

## 4.2 Analyse der Teilnetzwerke 
###4.2.1 Einzelne Netzwerkdaten rausfiltern

Einleitender Text
(Was haben wir bisher gemacht, was wollen wir jetzt rausfinden)
--> Dichte und Pfaddistanzen
``` {r Teilnetzwerke erstellen und vereinfachen, message=FALSE, warning=FALSE, paged.print=FALSE}
## Dichte des Netzwerks
edge_density(Spanien10, loops=FALSE)
edge_density(Deutschland14, loops=FALSE)
edge_density(Frankreich18, loops=FALSE)

## Pfaddistanzen (Distance)
farthest_vertices(Spanien10)
farthest_vertices(Deutschland14)
farthest_vertices(Frankreich18)

```

Text schreiben 
Beobachtungen:
1) Dichte (auch mit genauen Zahlen am Besten; bei Frankreich viel weniger zb)
2) Weiteste Distanz (zwei Spieler, und die Distanz) 



##Akteursmaße

Einleitender Satz: Akteure mit wichtigen Beziehungen

```{r Netzwerke Degree}
#Degree
degree(Spanien10)
degree(Deutschland14)
degree(Frankreich18)

#Betweenness 
betweenness(Spanien10)
betweenness(Deutschland14)
betweenness(Frankreich18)

#Closeness
closeness(Spanien10)
closeness(Deutschland14)
closeness(Frankreich18)

#K-Core
coreness(Spanien10)
coreness(Deutschland14)
coreness(Frankreich18)

```

Beobachtungen, Ergebnisse: 
nochmal reinlesen, Skripte Sandhu; Ergebnisse daraus ziehen

Abschließender Text. Welche Spieler waren besonders wichtig etc?

--> K-Core sagt XYZ aus, daher interessant: Wie sieht es aus mit CLustern? Sind diese important Spieler vor allem da? Ist das gleich?

#Cluster und Cliquen 

```{r Netzwerke Degree}
# Anzahl der Cluster
clusters(Spanien10)
is_connected(Spanien10)

components(Spanien10)
cwSpanien10 <- cluster_walktrap(Spanien10)
modularity(cwSpanien10)
membership(cwSpanien10)
plot(cwSpanien10, Spanien10, edge.arrow.size=0.1, main="Cluster Spanien 2010")

clusters(Deutschland14)
is_connected(Deutschland14)

components(Deutschland14)
cwDeutschland14 <- cluster_walktrap(Deutschland14)
modularity(cwDeutschland14)
membership(cwDeutschland14)
plot(cwDeutschland14, Deutschland14, edge.arrow.size=0.1, main="Cluster Deutschland 2014")

clusters(Frankreich18)
is_connected(Frankreich18)

components(Frankreich18)
cwFrankreich18 <- cluster_walktrap(Frankreich18)
modularity(cwFrankreich18)
membership(cwFrankreich18)
plot(cwFrankreich18, Frankreich18, edge.arrow.size=0.1, main="Cluster Frankreich 2018")

#Largest CLiques
largest_cliques(Spanien10)
largest_cliques(Deutschland14)
largest_cliques(Frankreich18)

max_cliques(Spanien10)
max_cliques(Deutschland14)
max_cliques(Frankreich18)

```
ERKLÄRENDER TEXT USW
Beobachtungen und Unterschiede
Sowohl Cluster (Bilder) als auch Cliquen (R Console)

### 4.2.2 Teilnetzwerke nach Node-Attributen (CLUBS)

Hier teilnetzwerke erstellen für die großen clubs der länder --> Blöcke anzeigen lassen.
Erst später Texten 

*Teilnetzwerk Club* 

```{r Teilnetzwerk nach Node-Attribut Geschlecht, fig.height=6, fig.width=10, message=FALSE, warning=FALSE, paged.print=TRUE}
library(igraph)
el <- read.csv("https://raw.githubusercontent.com/hdm-crpr/226305/master/data/crpr2/edges.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("https://raw.githubusercontent.com/hdm-crpr/226305/master/data/crpr2/nodes.csv", header=T, as.is=T, sep = ",")
edgematrix <-as.matrix(el)
s <- graph_from_data_frame(d=edgematrix, vertices=nodes, directed=T)

list.vertex.attributes(s)
vertex_attr(s)$sex

s_fem <- delete_vertices(s, V(s)[sex > "1"]) 
s_fem 
plot(s_fem, layout=layout_with_kk,
     main="Gesamtnetzwerk: weibliche Akteure",
     edge.color="pink",
     edge.arrow.size=.3,
     vertex.color="pink",
     vertex.frame.color=NA,
     sub="n=29, 110 Kanten")
```

TEXT ZU CLUB-Blöcke 

### Wichtigkeit der Spieler für den Erfolg

Einleitender Text
wie das aussieht mit important spieler etc.

```{r Teilnetzwerke erstellen und vereinfachen, message=FALSE, warning=FALSE, paged.print=FALSE}

Spanien10_imp <- delete_vertices(Spanien10, V(Spanien10)[value<4])
Spanien10_imp

```

```{r Deutschland14 Important}

Deutschland14_imp <- delete_vertices(Deutschland14, V(Deutschland14)[value<4])
Deutschland14_imp

```

```{r Frankreich18 Important}

Frankreich18_imp <- delete_vertices(Frankreich18, V(Frankreich18)[value<4])
Frankreich18_imp

```

Beobachtugen:
bsp. Deutschland: 14 Spieler, aber 33 Verbindungen -> eingespielt
Frankreich: 15 Spieler, 5 Verbindungen -> nicht eingespielt

### 5.1.1 Gesamtvisualisierung

```{r Visualisierung eines multiplexe Netzwerke erstellen, fig.height=8, fig.width=10, message=TRUE, paged.print=TRUE}
library(igraph)
el <- read.csv("https://raw.githubusercontent.com/hdm-crpr/226305/master/data/crpr2/edges.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("https://raw.githubusercontent.com/hdm-crpr/226305/master/data/crpr2/nodes.csv", header=T, as.is=T, sep = ",")
edgematrix <-as.matrix(el)
s <- graph_from_data_frame(d=edgematrix, vertices=nodes, directed=T)

# definiert die Farbe der Relation
E(s)[E(s)$relation == 1]$color <- "blue" 
E(s)[E(s)$relation == 2]$color <- "darkgreen"
E(s)[E(s)$relation == 3]$color <- "red"

# Visualisierungsparameter festlegen
par(mar=c(6,3,3,3)) 

# Plot mit den gesetzten Farben für das Attribut Beziehung realisieren
plot(s,
     asp=0,
     edge.arrow.size=.5,
     vertex.color="gray75",
     vertex.frame.color="NA",
     vertex.size=8,
     layout=layout_with_kk,
     edge.curved=curve_multiple(s),
     main="Multiplexes Netzwerk, d.h. verschiedene Formen der Beziehung",
     sub="n=38 Knoten; Kantenfarbe 
     blau=Zusammenarbeit, grün=Ratsuche, rot=Beziehung")

par(mar=c(0,0,0,0)) 

```

# 6. Diskussion: 
##Fazit 
## Limitationen / Grenzen
## Ausblick

# Anlage
## Literatur

## Codebuch

## Datenmaterial und Skript

## Team, Arbeitsaufwand und Lessons Learned
